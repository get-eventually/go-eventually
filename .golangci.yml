run:
  # Avoid false positives on .github configuration files.
  skip-dirs:
    - .github
    - resources
    - migrations # NOTE: this is relative to postgres module
    - core/internal/user
    - postgres/internal/user
    - gen/*

linters-settings:
  dupl:
    threshold: 100
  funlen:
    lines: 65
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/get-eventually/go-eventually)
  goconst:
    min-len: 2
    min-occurrences: 2
  gocognit:
    min-complexity: 20
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
  gocyclo:
    min-complexity: 15
  goimports:
    local-prefixes: github.com/get-eventually/go-eventually
  golint:
    min-confidence: 0
  govet:
    check-shadowing: true
  lll:
    line-length: 160
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped
  prealloc:
    # NOTE: since the codebase uses channels as streams pretty extensively, we are
    # disabling the range-over-channel case for this linter.
    range-loops: false

linters:
  disable-all: true
  enable:
    - dogsled
    - dupl
    - errcheck
    - exhaustive
    - funlen
    - gci
    - gochecknoinits
    - gocognit
    - goconst
    # NOTE: disabling this linter since it panics when analyzing core/message pkg.
    # - gocritic
    - gocyclo
    - godot
    - gofumpt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - ineffassign
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nolintlint
    - prealloc
    - revive
    # These two linters are useful for the Postgres Event Store implementation.
    - staticcheck
    - stylecheck
    - testpackage
    - typecheck
    - unconvert
    - unused
    - whitespace
    - wsl
    # These linters are disabled due to Go 1.18 issues with go/ssa package.
    # More context here: https://github.com/golangci/golangci-lint/issues/2649
    #
    # - bodyclose
    # - govet
    # - nilerr
    # - rowserrcheck
    # - sqlclosecheck
    # - structcheck
    # - unparam
    # - wastedassign

issues:
  exclude-use-default: false

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - funlen

    - path: core/*
      linters:
        - gocritic

    # dupl linter is annoying in this module.
    - path: serdes
      linters:
        - dupl

    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
